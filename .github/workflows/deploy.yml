name: Build and Deploy
on:
  push:
    branches:
      - source
      - cloudflare-workers
  watch:
    types: [started]
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.actor == github.event.repository.owner.login
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.4
        with:
          persist-credentials: false

      - name: Cache node_modules ‚ôªÔ∏è
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies üì¶
        run: npm ci --production

      - name: Build üîß
        env:
          API_DOMAIN: ${{ secrets.API_DOMAIN }}
        run: npm run build

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: master
          FOLDER: dist

      - name: Deploy cloudflare workers üå©Ô∏è
        uses: cloudflare/serverless-action@master
        with:
          CLOUDFLARE_AUTH_EMAIL: ${{ secrets.CLOUDFLARE_AUTH_EMAIL }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_AUTH_KEY: ${{ secrets.CLOUDFLARE_AUTH_KEY }}
          CLOUDFLARE_SCRIPT_NAME: example-worker
        run: echo "deploy workers"
